plugins { id 'org.xtext.xtend' version '1.0.15' }
apply from: "${rootDir}/gradle/source-layout-xtext.gradle"
apply plugin: 'eclipse'

ext {
  xtextVersion = '2.10.0'
}

dependencies {
  compile group: 'org.eclipse.xtext', name: 'org.eclipse.xtext.xbase', version: xtextVersion
  testCompile group: 'org.eclipse.xtext', name: 'org.eclipse.xtext.junit4', version: xtextVersion
  testCompile group: 'org.eclipse.xtext', name: 'org.eclipse.xtext.xbase.junit', version: xtextVersion
}
configurations {
  mwe2 { extendsFrom compile }
}

dependencies {
  mwe2 group: 'org.eclipse.emf', name: 'org.eclipse.emf.mwe2.launch', version: '2.8.3'
  mwe2 group: 'org.eclipse.xtext', name: 'org.eclipse.xtext.xtext.generator', version: xtextVersion
}

task generateXtextLanguage(type: JavaExec) {
  main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
  classpath = configurations.mwe2
  inputs.file 'src/main/java/ingraph/cucumber/featureresult/GenerateFeatureResults.mwe2'
  inputs.file 'src/main/java/ingraph/cucumber/featureresult/FeatureResults.xtext'
  outputs.dir 'src/main/xtext-gen'
  args += 'src/main/java/ingraph/cucumber/featureresult/GenerateFeatureResults.mwe2'
  args += '-p'
  args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
